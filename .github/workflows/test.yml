name: CI

on:
  push:
    branches:
      - main
      - stable/*
  pull_request:

env:
  FORCE_COLOR: "1" # Make tools pretty.
  TOX_TESTENV_PASSENV: FORCE_COLOR
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  COVERAGE_CORE: sysmon # Only supported on Python 3.12+, ignore on older versions
  PYTHON_LATEST: "3.14"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ env.PYTHON_LATEST }}
      - uses: pre-commit/action@v3.0.1
  test:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python: ["3.10", "3.11", "3.12", "3.13", "3.14"]
    steps:
      - uses: actions/checkout@v5
      - name: Install system dependencies
        uses: gerlero/apt-install@a0d81074b838120197865dc2576f67c4f40044b2
        with:
          packages: jpegoptim pngquant gifsicle optipng libjpeg-progs webp libheif-dev libheif-plugin-aomenc libheif-plugin-x265
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python }}
          allow-prereleases: true
          cache: pip
      - name: Install dependencies
        run: |
          python -Im pip install --upgrade pip opencv-python-headless
          python -Im pip install -e .[testing]
      - name: Test
        run: coverage run --parallel-mode -m runtests --opencv

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python }}
          path: .coverage.*
          if-no-files-found: ignore
          include-hidden-files: true

  coverage:
    name: Combine & check coverage.
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ env.PYTHON_LATEST }}
          cache: pip

      - name: Download coverage data
        uses: actions/download-artifact@v5
        with:
          pattern: coverage-data-*
          merge-multiple: true

      - name: Combine coverage
        run: |
          python -Im pip install coverage
          python -Im coverage combine
          python -Im coverage html --skip-covered --skip-empty

          # Report and write to summary.
          python -Im coverage report | sed 's/^/    /' >> $GITHUB_STEP_SUMMARY

      - name: Upload HTML report if check failed.
        uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: htmlcov
          overwrite: true
